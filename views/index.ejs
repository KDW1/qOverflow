<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>qOverflow</title>
  <link rel="stylesheet" href="/index.css">
</head>
<script src="https://cdn.tailwindcss.com"></script>

<body>  
   <%-  include('../views/navbar.ejs', {loggedIn: loggedIn, user: user}); %>
   <% if(loggedIn) { %>
    <div class="fixed bottom-4 right-4 group  px-2 py-2 bg-gray-200 bg-opacity-75 rounded-3xl flex items-center hover:bg-opacity-90 hover:-translate-x-1/4 transition-all delay-75 duration-700 ease-in-out">
       <svg xmlns="http://www.w3.org/2000/svg" class="w-12 h-12 stroke-gray-700 transition-all duration-500 " fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
         <path stroke-linecap="round" stroke-linejoin="round" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
       </svg>
       <form action="/questionEditor" method="POST">
        <input type="hidden" name="username" value="<%= user.username %> ">
        <input value="Create a Question" type="submit" class="text-2xl cursor-pointer text-gray-700 mr-2 font-semibold inline-block transition-all delay-150">
       </form>
    </div>
   <% } %>  
   <div id="questions">
    <div class="flex items-center justify-center flex-col px-[30px]">
      <div class=" my-5 rounded overflow-hidden shadow-lg min-w-full ">
       <div class="px-4 py-4 ">
         <img class="animate-spin" width="100" height="100" src="https://media.24ways.org/2009/15/assets/img/spinner.png">
    
       </div>
     </div>
    </div>
   </div>
  <script>
    async function getQuestions() {
      var data = await fetch('/buffet').then(res => res.json());
      return data;
    }

    function clearQuestions() {
      var questions = document.getElementById('questions');
      questions.innerHTML = '';
    }

    function msToTime(duration) {
      const portions = [];
        const msInDay = 1000 * 60 * 60 * 24;
      const days = Math.trunc(duration / msInDay);
      if (days > 0) {
        portions.push(days + 'd');
        duration = duration - (days * msInDay);
      }
    
      const msInHour = 1000 * 60 * 60;
      const hours = Math.trunc(duration / msInHour);
      if (hours > 0) {
        portions.push(hours + 'h');
        duration = duration - (hours * msInHour);
      }
    
      const msInMinute = 1000 * 60;
      const minutes = Math.trunc(duration / msInMinute);
      if (minutes > 0) {
        portions.push(minutes + 'm');
        duration = duration - (minutes * msInMinute);
      }
    
      const seconds = Math.trunc(duration / 1000);
      if (seconds > 0) {
        portions.push(seconds + 's');
      }
    
      return portions[0];
    }

    function appendQuestion(data) {
      console.log(data);
      data.timeElapsed = msToTime(Date.now() - data.createdAt);
      var question = `<div class="flex items-center justify-center flex-col px-[30px]">
    <div class=" my-5 rounded overflow-hidden shadow-lg min-w-full ">
     <div class="px-4 ">
       <div class="font-bold text-xl mb-2">${data.title}</div>
     </div>
     <div class="px-6 pt-4 pb-2 ">
       <span class="inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2">By: ${data.creator}</span>
       <span class="inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2">${data.timeElapsed} ago</span>
     </div>
   </div>
 </div>`
      document.getElementById('questions').innerHTML += question;
    }

    getQuestions().then((data) => {
      clearQuestions();
      if(data.success) {
        data.questions.forEach(appendQuestion);
      } else {
        alert(data.message);
      }
    });
    
  </script>
</body>
</html>