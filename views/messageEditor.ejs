<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Create a Message</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        [contentEditable=true]:empty:not(:focus):before{
            content:attr(data-text)
        }

        #preview h1 {
            font-size:116px;
            line-height: 1.2;
        }
        #preview h2 {
            font-size:58.39px;
            line-height: 1.2;
        }
        #preview h3 {
            font-size:53.59px;
            line-height: 1.2;
        }
        #preview h4 {
            font-size: 48.8px;
            line-height: 1.2;
        }
        #preview h5 {
            font-size: 44px;
            line-height: 1.2;
        }
        #preview h6 {
            font-size:39.19px;
            line-height: 1.2;
        }
        #preview p {
            font-size:30px;
            line-height: 1.2;
        }
                
/* Style the tab */
.tab {
  overflow: hidden;
  background-color: #f1f1f1;
}

/* Style the buttons inside the tab */
.tab button {
  background-color: inherit;
  float: left;
  border: none;
  outline: none;
  cursor: pointer;
  padding: 14px 16px;
  transition: 0.3s;
  font-size: 17px;
}

/* Change background color of buttons on hover */
.tab button:hover {
  background-color: #ddd;
}

/* Create an active/current tablink class */
.tab button.active {
  background-color: #ccc;
}

/* Style the tab content */
.tabcontent {
  display: none;
  padding: 6px 12px;
  border-top: none;
}
    </style>
</head>

<body class="bg-blue-500">
    <%- include('../views/navbar.ejs', {loggedIn: true, user: user}); %>

<div class="m-5 bg-blue-200 shadow-md rounded-lg hover:shadow-xl text-4xl">
    <div class="m-4">
        <h1 class="p-3 text-center text-3xl font-extrabold md:text-5xl ">Create a message</h1>
        </div>
            <div class="flex justify-center">
                <div class="cursor-pointer rounded-lg bg-gray-200 hover:ring-2 hover:ring-offset-1 hover:ring-gray-200 px-2 py-1 font-semibold text-2xl text-gray-700">
                    <a href="/mail">Go Back</a>
                </div>
            </div>
        <div class="w-full">
            <% if(locals.error) { %>
                <br/>
                <center>
            <div class="bg-red-100 border text-center self-center border-red-400 text-lg text-red-700 px-4 py-3 w-fit rounded relative" role="alert">
               
                <span class="block sm:inline text-center"><b>Error:</b><br/><%= error %></span>
        
              </div>
            </center>
              <% } %>
        
            <form class="w-full" action="/messages" method="POST">
                <div class="flex">
                    <div class="flex-1 w-full">
                        <input type="hidden" name="username" value="<%= username %>">
                        <div class="grid sm:flex place-content-center mb-10 mt-5 w-full">
                            <label class="text-2xl mr-3 text-center md:text-left font-extrabold block">Title:</label>
                            <input required maxlength="75" type="text" id="text75" name="subject"
                                class="text-xl outline-black rounded outline outline-4 text-center place-self-center font-bold flex flex-row h-10 w-full md:w-3/4" required/>
                        </div>
                              <div class="flex flex-col flex-wrap mb-10 space-x-4 place-content-center">
                            <label class="text-2xl font-bold">Send To:</label>
                            <input required name="receiver"
                                class="p-3 text-2xl  outline-black rounded outline outline-4 text-left font-bold block h-8 w-full  md:h-10 md:w-96">
                               
                                <div class=" mt-1 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none" role="menu" aria-orientation="vertical" aria-labelledby="menu-button" tabindex="-1">
                                   
                                    <div class="py-1 hidden" id="autocomplete" role="none">
                                    </div>
                                  </div>
                                  <script>
                                    document.querySelector('input[name="receiver"]').onfocus = () => {
                                       if(document.getElementById("autocomplete").children.length > 0) document.querySelector('#autocomplete').classList.remove('hidden');
                                    }

                                    document.querySelector('input[name="receiver"]').addEventListener('keyup', function(e) {
                                      var text = e.target.value;
                                      if(text.length > 0) {
                                        function somefunction(e) {
                                            console.log(e.target.innerText)
                                            return false
                                        }

                                        window.somefunction = somefunction;

                                        fetch('/api/autocomplete?current='+encodeURIComponent(text)).then((e) => e.json()).then((e) => {
                                            if(e.success) {
                                                document.getElementById("autocomplete").classList.remove("hidden");
                                                document.getElementById("autocomplete").innerHTML = e.data.map(function(e) {
                                                    return '<button type="button" id="'+e.u+'" class="text-gray-700 mt-2 block px-4 py-2 text-sm" role="menuitem" tabindex="-1" id="menu-item-'+e.u+'"><img style="display: inline-block;" class="rounded-full w-5 h-5" src="'+e.img+'">&nbsp'+e.u+'</a>';
                                                }).join('');
                                                e.data.forEach((f) => {
                                                        document.getElementById(f.u).addEventListener("click", () => {
                                                            document.querySelector('input[name="receiver"]').value = f.u;
                                                    document.getElementById("autocomplete").classList.add("hidden");

                                                        })
                                                })
                                                if(e.data.length == 0) {
                                                    document.getElementById("autocomplete").classList.add("hidden");
                                                }
                                            }
                                        })
                                      } else {
                                        document.getElementById("autocomplete").classList.add("hidden");

                                      }
                                    });
                                  </script>
                        
                            </div>
                        <a id="contentButton" onclick="openCity(event, 'editor')" class="inline-block bg-green-500 mx-3 px-3 py-2 text-lg rounded-2xl leading-5 font-medium text-black hover:text-gray-900 focus:outline-none focus:text-white-900 focus:bg-gray-50 cursor-pointer focus:border-gray-300 focus:border-blue-300">
                            Editor
                           </a>
                           <a id="editorButton" onclick="openCity(event, 'viewer3')" class="inline-block px-3 py-2 text-lg rounded-2xl leading-5 font-medium text-black hover:text-gray-900 focus:outline-none focus:text-white-900 focus:bg-gray-50 cursor-pointer focus:border-gray-300 focus:border-blue-300">
                             Preview
                            </a>
                  
                        <div class='flex mb-5 tabcontent' id="editor" style="display:block;">
                            <label class='m-2 text-2xl font-bold'>Content</label>
                            <textarea id='text3000' maxlength='3000' type='text' name="text" onkeyup='val(this);'
                                class='m-2 p-3 text-2xl outline-black rounded outline outline-4 text-left font-bold block h-48 w-full md:h-80 md:w-full' placeholder="Enter Markdown content..." required></textarea>
                        </div>
                        <div id="viewer3" class="tabcontent">
                            <div id='viewer'>
                                <label class='m-2 text-2xl font-bold'>View</label>
                                <article id="preview" data-text="Output of Markdown shown here..." contenteditable="false" 
                                    class='w-min bg-white break-words overflow-scroll m-2 p-3 outline-black rounded outline outline-4 text-left block text-gray-400 h-48 min-w-full md:h-80'>
                                </article>
                            </div>
                        </div>
                  
                        <div class="flex my-3 justify-center">
                            <input type="submit" class="cursor-pointer rounded-lg bg-gray-200 hover:ring-2 hover:ring-offset-1 hover:ring-gray-200 px-2 py-2 font-semibold text-2xl text-gray-700" value="Send Message">
                        </div>
                    </div>
            </form>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/showdown/2.1.0/showdown.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
    <script>
   document.getElementById("contentButton").addEventListener("click", function () {
            document.getElementById("contentButton").classList.add("bg-green-500");
            document.getElementById("editorButton").classList.remove("bg-green-500");
        });
        document.getElementById("editorButton").addEventListener("click", function () {
           // classlist add
            document.getElementById("editorButton").classList.add("bg-green-500");
            document.getElementById("contentButton").classList.remove("bg-green-500");
           
        });
        $(document).ready(function () {
            $("#text75").keypress(function (e) {
                var length = this.value.length;
                if (length >= 75) {
                    e.preventDefault();
                    alert("More than 75 characters not allowed in the Title");
                }
            });

        });
        $(document).ready(function () {
            $("#text150").keypress(function (e) {
                var length = this.value.length;
                if (length >= 150) {
                    e.preventDefault();
                    alert("More than 150 characters not allowed in the Body");
                }
            });

        });
        $(document).ready(function () {
            $("#text200").keypress(function (e) {
                var length = this.value.length;
                if (length >= 200) {
                    e.preventDefault();
                    alert("More than 200 characters not allowed in the Sub Title");
                }
            });

        });
    </script>
    
    <script>

        function openCity(evt, cityName) {
        var i, tabcontent, tablinks;
        tabcontent = document.getElementsByClassName("tabcontent");
        for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = "none";
        }
        tablinks = document.getElementsByClassName("tablinks");
        for (i = 0; i < tablinks.length; i++) {
            tablinks[i].className = tablinks[i].className.replace(" active", "");
        }
        document.getElementById(cityName).style.display = "block";
        evt.currentTarget.className += " active";
        }

        function val(e) {
            ghf = e.value.replace(/[\u00A0-\u9999<>\&]/g, function(i) {
   return '&#'+i.charCodeAt(0)+';';
});
            console.log(marked.parse(ghf))
            codeblock = marked.parse(ghf);
            document.getElementById("viewer").innerHTML = "<label class='text-2xl font-bold'>View:</label><article id='preview' data-text='Output of Markdown shown here...' contenteditable='false' class='break-words bg-white overflow-scroll m-2 p-3 outline-black rounded outline outline-4 text-left block text-black h-48 min-w-full md:h-80 md:min-w-full'>"+codeblock+"</article>";
        }
        // function qwerty(e) {
        //     ghf = e.value;
        //     console.log(ghf);
        //     codeblock = ghf;
        //     document.getElementById("viewer").innerHTML = "<label class='text-xl font-bold'>View:</label><div id='preview' contentEditable=true data-text='Output of Markdown shown here...'class='m-2 p-3 text-2xl outline-black rounded outline outline-4 text-left font-bold block text-black h-48 min-w-full md:h-80 md:min-w-full'>"+codeblock+"</div>";
        // }
        $("#viewer").load(location.href + " #viewer");
        $("#editer").load(location.href + " #editor");
        // var textArea = document.getElementById('preview');

        // textArea.addEventListener('input', function (event) {
        //     console.log(event.target.value);
        // });
    </script>
</body>
</html>